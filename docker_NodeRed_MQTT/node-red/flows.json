[
    {
        "id": "8b9071f7.6ad848",
        "type": "tab",
        "label": "Reception donn√©es / API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bd329ca2.49e1c",
        "type": "tab",
        "label": "Simulation Capteur",
        "disabled": false,
        "info": ""
    },
    {
        "id": "868e002.b1115",
        "type": "tab",
        "label": "Modification BD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a6592cfa.8a3a9",
        "type": "tab",
        "label": "Test API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8d4da33c.cb6318",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "26e813b1.5ac7d4",
        "type": "mongodb",
        "hostname": "cluster0.kiq9v.mongodb.net",
        "topology": "dnscluster",
        "connectOptions": "retryWrites=true&w=majority",
        "port": "27017",
        "db": "TER",
        "name": "DB_TER"
    },
    {
        "id": "54619bbd.4386e4",
        "type": "ui_tab",
        "name": "Modification BD",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab6d3217.b3c21",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c77967b8.a0576",
        "type": "ui_group",
        "name": "Ajouter Commerce",
        "tab": "54619bbd.4386e4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ef2f15.4ec0a0e8",
        "type": "ui_tab",
        "name": "Simulation capteur",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6fea2f48.a2d1d",
        "type": "ui_group",
        "name": "Modifier commerce",
        "tab": "54619bbd.4386e4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "bc954448.141188",
        "type": "ui_group",
        "name": "Capteur commerce",
        "tab": "ef2f15.4ec0a0e8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7afdaad1.d16124",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "deb6180f.95e568",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc3f12fa.6421d8",
        "type": "ui_group",
        "name": "Capteur parking",
        "tab": "ef2f15.4ec0a0e8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cd96fa45.e4f66",
        "type": "websocket-listener",
        "path": "parkings",
        "wholemsg": "false"
    },
    {
        "id": "3a960f68.dfb54",
        "type": "websocket-client",
        "path": "ws://localhost:1880/commerces",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "54651cc0.ab9ae4",
        "type": "websocket-listener",
        "path": "/commerces",
        "wholemsg": "false"
    },
    {
        "id": "f0b098ac.865b88",
        "type": "websocket-client",
        "path": "ws://localhost:1880/parkings",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "941d827f.4c8a6",
        "type": "websocket-listener",
        "path": "/bus",
        "wholemsg": "false"
    },
    {
        "id": "e991ef01.29e098",
        "type": "websocket-listener",
        "path": "/arrets",
        "wholemsg": "false"
    },
    {
        "id": "e781ed8.8a07d1",
        "type": "websocket-listener",
        "path": "/lignes",
        "wholemsg": "false"
    },
    {
        "id": "a9a0c9d7.b75908",
        "type": "ui_group",
        "name": "Capteur Bus",
        "tab": "ef2f15.4ec0a0e8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f7301b08.c632c",
        "type": "websocket-client",
        "path": "ws://localhost:1880/bus",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "3ffbac36.c46ba4",
        "type": "websocket-client",
        "path": "ws://localhost:1880/arrets",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "40512fb3.0355a8",
        "type": "websocket-client",
        "path": "ws://localhost:1880/lignes",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "d55b5b7e.6a0a8",
        "type": "websocket-client",
        "path": "ws://localhost:1880/posBus",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "ab307ed3.132828",
        "type": "websocket-listener",
        "path": "/posBus",
        "wholemsg": "false"
    },
    {
        "id": "b7b8bdf4.c4f7d8",
        "type": "mqtt in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "topic": "CapteurCommerce",
        "qos": "2",
        "datatype": "auto",
        "broker": "8d4da33c.cb6318",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "e3e72668.65d148"
            ]
        ]
    },
    {
        "id": "ff7d6df5.f4b6d",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "var sensorId = msg.payload.sensorId;\nvar type = msg.payload.type;\nvar date = new Date();\n\nmsg.query= {\"sensorIdArray\": sensorId};\nmsg.payload = { \"$push\": {\"sensorsDatas\": {\"date\": date, \"type\":type, \"sensorId\":sensorId}} };\n\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "88f4ef15.a371e8",
                "6f84d98b.f72138"
            ]
        ]
    },
    {
        "id": "e3e72668.65d148",
        "type": "json",
        "z": "8b9071f7.6ad848",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "ff7d6df5.f4b6d",
                "8c589ae4.4ea93"
            ]
        ]
    },
    {
        "id": "88f4ef15.a371e8",
        "type": "mongodb out",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "commerces",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "6f84d98b.f72138",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "3298def5.28a022",
        "type": "inject",
        "z": "bd329ca2.49e1c",
        "name": "String sensorId and values",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sensorId\":\"0_in\",\"type\":\"in\"}",
        "payloadType": "str",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "4db39dae.2616f4"
            ]
        ]
    },
    {
        "id": "4db39dae.2616f4",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurCommerce",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "e4a9f734.5f22",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer entr√©e",
        "group": "bc954448.141188",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer entr√©e",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "e3047bec.9f4808"
            ]
        ]
    },
    {
        "id": "e3047bec.9f4808",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdCommerce\"),\"type\":\"in\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "dd2c66a7.d7077"
            ]
        ]
    },
    {
        "id": "dd2c66a7.d7077",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurCommerce",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "287cb964.5d9536",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer sortie",
        "group": "bc954448.141188",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer sortie",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "40b15ee1.336c7"
            ]
        ]
    },
    {
        "id": "40b15ee1.336c7",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdCommerce\"),\"type\":\"out\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 400,
        "wires": [
            [
                "3b30a00b.c66e38"
            ]
        ]
    },
    {
        "id": "3b30a00b.c66e38",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurCommerce",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 470,
        "y": 400,
        "wires": []
    },
    {
        "id": "f15c18de.de80d8",
        "type": "ui_form",
        "z": "868e002.b1115",
        "name": "Formulaire ajout commerce",
        "label": "",
        "group": "c77967b8.a0576",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Nom",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Adresse",
                "value": "address",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Code postal",
                "value": "postal_code",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Ville",
                "value": "city",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Latitude",
                "value": "latitude",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Longitude",
                "value": "longitude",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Num Telephone",
                "value": "phone",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Capacit√© max",
                "value": "maxPeopleCapacity",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "address": "",
            "postal_code": "",
            "city": "",
            "latitude": "",
            "longitude": "",
            "phone": "",
            "maxPeopleCapacity": ""
        },
        "payload": "",
        "submit": "Envoyer",
        "cancel": "Annuler",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "1d01d927.9d4777",
                "ebef0046.00fd18"
            ]
        ]
    },
    {
        "id": "4ee7f826.0fc258",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "count all commerces",
        "collection": "commerces",
        "operation": "count",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "1fa55018.f11c78"
            ]
        ]
    },
    {
        "id": "1fa55018.f11c78",
        "type": "change",
        "z": "868e002.b1115",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "count",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1d01d927.9d4777",
        "type": "change",
        "z": "868e002.b1115",
        "name": "{}",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "4ee7f826.0fc258"
            ]
        ]
    },
    {
        "id": "ebef0046.00fd18",
        "type": "delay",
        "z": "868e002.b1115",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "fc90af3c.ca1a08"
            ]
        ]
    },
    {
        "id": "fc90af3c.ca1a08",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "var id = flow.get('count');\nmsg.payload._id = id;\nmsg.payload.sensorIdArray = [];\nmsg.payload.sensorIdArray.push(id.toString() + \"_in\");\nmsg.payload.sensorIdArray.push(id.toString() + \"_out\");\nmsg.payload.sensorsDatas = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "330fe4f7.3ef44c"
            ]
        ]
    },
    {
        "id": "330fe4f7.3ef44c",
        "type": "mongodb out",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "commerces",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1000,
        "y": 80,
        "wires": []
    },
    {
        "id": "59b881df.383ce",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "commerces",
        "operation": "find",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "a171fe9b.9482a8"
            ]
        ]
    },
    {
        "id": "3beeae30.86d1da",
        "type": "inject",
        "z": "868e002.b1115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "59b881df.383ce"
            ]
        ]
    },
    {
        "id": "a171fe9b.9482a8",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "854acb46.217a08"
            ]
        ]
    },
    {
        "id": "854acb46.217a08",
        "type": "debug",
        "z": "868e002.b1115",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "45169083.d3a4a",
        "type": "ui_text_input",
        "z": "bd329ca2.49e1c",
        "name": "",
        "label": "ID capteur",
        "tooltip": "",
        "group": "bc954448.141188",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "c52df6fa.e57de8",
                "4ce17ea1.7d4758"
            ]
        ]
    },
    {
        "id": "6a2f6594.a3dd84",
        "type": "mongodb in",
        "z": "bd329ca2.49e1c",
        "mongodb": "26e813b1.5ac7d4",
        "name": "find",
        "collection": "commerces",
        "operation": "find",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "ed38aea3.f478c"
            ]
        ]
    },
    {
        "id": "c52df6fa.e57de8",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorIdArray\" :msg.payload} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "6a2f6594.a3dd84"
            ]
        ]
    },
    {
        "id": "ed38aea3.f478c",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "commerce = msg.payload[0];\n\nmsg_name ={ payload : commerce.name};\nmsg_address ={ payload : commerce.address};\nmsg_city ={ payload : commerce.city};\n\nreturn [ msg_name ,msg_address, msg_city]",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 200,
        "wires": [
            [
                "c2c5becf.71f72"
            ],
            [
                "59d20b0e.a59a9c"
            ],
            [
                "bc30e2e2.62dfb"
            ]
        ]
    },
    {
        "id": "c2c5becf.71f72",
        "type": "ui_text",
        "z": "bd329ca2.49e1c",
        "group": "bc954448.141188",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nom:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "59d20b0e.a59a9c",
        "type": "ui_text",
        "z": "bd329ca2.49e1c",
        "group": "bc954448.141188",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Adresse:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "bc30e2e2.62dfb",
        "type": "ui_text",
        "z": "bd329ca2.49e1c",
        "group": "bc954448.141188",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ville:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "4ce17ea1.7d4758",
        "type": "change",
        "z": "bd329ca2.49e1c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIdCommerce",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1502cc31.a8cc6c",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer in au commerce 0 via le capteur  \"0_in\"",
        "info": "",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "2d966a2d.bb636e",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Set flow.sensorId et Affichage des information du commerce",
        "info": "",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "a089d2bc.a76ab",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Gestion du formulaire pour l'ajout de commerces",
        "info": "",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "f42ad244.be1be",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoye une entr√©e ou une sortie apr√®s avoir appuyer les boutons",
        "info": "",
        "x": 270,
        "y": 300,
        "wires": []
    },
    {
        "id": "d295b2c2.bbd668",
        "type": "mqtt in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "topic": "CapteurParking",
        "qos": "2",
        "datatype": "auto",
        "broker": "8d4da33c.cb6318",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 380,
        "wires": [
            [
                "b81a11a0.af3b28"
            ]
        ]
    },
    {
        "id": "eb9b9a82.e7da2",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "var sensorId = msg.payload.sensorId;\nvar type = msg.payload.type;\nvar date = new Date();\n\nmsg.query= {\"sensorIdArray\": sensorId};\nmsg.payload = { \"$push\": {\"sensorsDatas\": {\"date\": date, \"type\":type, \"sensorId\":sensorId}} };\n\n\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "9f6eb2d.7aab3d",
                "612831b1.894268"
            ]
        ]
    },
    {
        "id": "b81a11a0.af3b28",
        "type": "json",
        "z": "8b9071f7.6ad848",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "eb9b9a82.e7da2",
                "fc292413.c6478"
            ]
        ]
    },
    {
        "id": "9f6eb2d.7aab3d",
        "type": "mongodb out",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "parkings",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "612831b1.894268",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "654ef863.900818",
        "type": "inject",
        "z": "bd329ca2.49e1c",
        "name": "String sensorId and values",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sensorId\":\"0_in\",\"type\":\"in\"}",
        "payloadType": "str",
        "x": 930,
        "y": 100,
        "wires": [
            [
                "b5713196.4576a"
            ]
        ]
    },
    {
        "id": "b5713196.4576a",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurParking",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 1140,
        "y": 100,
        "wires": []
    },
    {
        "id": "846e6074.16db38",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer entr√©e",
        "group": "bc3f12fa.6421d8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer entr√©e",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 880,
        "y": 300,
        "wires": [
            [
                "dd32e138.5eb33"
            ]
        ]
    },
    {
        "id": "dd32e138.5eb33",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdParking\"),\"type\":\"in\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "a020d012.cb93f"
            ]
        ]
    },
    {
        "id": "a020d012.cb93f",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurParking",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 1220,
        "y": 300,
        "wires": []
    },
    {
        "id": "6688c6a1.577478",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer sortie",
        "group": "bc3f12fa.6421d8",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer sortie",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 880,
        "y": 360,
        "wires": [
            [
                "cc496d7b.3d7a2"
            ]
        ]
    },
    {
        "id": "cc496d7b.3d7a2",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdParking\"),\"type\":\"out\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 360,
        "wires": [
            [
                "b506e3aa.c5874"
            ]
        ]
    },
    {
        "id": "b506e3aa.c5874",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurParking",
        "qos": "",
        "retain": "",
        "broker": "8d4da33c.cb6318",
        "x": 1220,
        "y": 360,
        "wires": []
    },
    {
        "id": "f8880988.3c8998",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoye une entr√©e ou une sortie apr√®s avoir appuyer les boutons",
        "info": "",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "d5ed3ca5.ab1bd",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "parkings",
        "operation": "find",
        "x": 310,
        "y": 360,
        "wires": [
            [
                "ab5aa5f5.1afa08"
            ]
        ]
    },
    {
        "id": "effc5169.af7188",
        "type": "inject",
        "z": "868e002.b1115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "d5ed3ca5.ab1bd"
            ]
        ]
    },
    {
        "id": "ab5aa5f5.1afa08",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "729811d8.3241e8"
            ]
        ]
    },
    {
        "id": "729811d8.3241e8",
        "type": "debug",
        "z": "868e002.b1115",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "4e1aa17a.c5d0c",
        "type": "ui_text_input",
        "z": "bd329ca2.49e1c",
        "name": "",
        "label": "ID capteur",
        "tooltip": "",
        "group": "bc3f12fa.6421d8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "topicType": "msg",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "53bc9f5a.44787"
            ]
        ]
    },
    {
        "id": "53bc9f5a.44787",
        "type": "change",
        "z": "bd329ca2.49e1c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIdParking",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b5455283.c50a58",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Set flow.sensorId  du parking",
        "info": "",
        "x": 930,
        "y": 160,
        "wires": []
    },
    {
        "id": "18fcf99.7bd3086",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer in au parking 0 via le capteur  \"0_in\"",
        "info": "",
        "x": 970,
        "y": 60,
        "wires": []
    },
    {
        "id": "33d59caf.687ccc",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "cb80b54b.3468c",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "33d59caf.687ccc"
            ]
        ]
    },
    {
        "id": "a2000ce8.ec378",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "3a960f68.dfb54",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "cb80b54b.3468c"
            ]
        ]
    },
    {
        "id": "3ec9f9a6.bd55b6",
        "type": "inject",
        "z": "8b9071f7.6ad848",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 04 * * *",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "b6b38107.7af338",
                "9fe28fe.1ee3c7",
                "9192c8e6.baa7d8",
                "a01b5cb3.87832",
                "82d50cb3.15f2a8"
            ]
        ]
    },
    {
        "id": "b6b38107.7af338",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "parkings",
        "operation": "find",
        "x": 1150,
        "y": 420,
        "wires": [
            [
                "cd4155c0.9931d"
            ]
        ]
    },
    {
        "id": "9e1dc3c7.f950f",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 420,
        "wires": []
    },
    {
        "id": "cd4155c0.9931d",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    parking = msg.payload[p]\n    parking.currentPeople = 0;\n    parking.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        parking.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            parking.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < parking.sensorsDatas.length; ++i){\n        if (parking.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (parking.sensorsDatas[i].date.getDay() == j && \n                    parking.sensorsDatas[i].date.getHours() == h){\n                        parking.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            parking.stat[j][h] = parking.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(parking);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 420,
        "wires": [
            [
                "fbd5c2e.5cfdb4"
            ]
        ]
    },
    {
        "id": "fbd5c2e.5cfdb4",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorParkings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 420,
        "wires": [
            [
                "9e1dc3c7.f950f"
            ]
        ]
    },
    {
        "id": "2ca2da8.a7cb226",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 480,
        "wires": []
    },
    {
        "id": "8278738e.86736",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    commerce = msg.payload[p]\n    commerce.currentPeople = 0;\n    commerce.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        commerce.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            commerce.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < commerce.sensorsDatas.length; ++i){\n        if (commerce.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (commerce.sensorsDatas[i].date.getDay() == j && \n                        commerce.sensorsDatas[i].date.getHours() == h){\n                        commerce.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            commerce.stat[j][h] = commerce.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(commerce);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 480,
        "wires": [
            [
                "b24a4a74.0062c8"
            ]
        ]
    },
    {
        "id": "b24a4a74.0062c8",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorCommerces",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 480,
        "wires": [
            [
                "2ca2da8.a7cb226"
            ]
        ]
    },
    {
        "id": "9fe28fe.1ee3c7",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "commerces",
        "operation": "find",
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "8278738e.86736"
            ]
        ]
    },
    {
        "id": "251aa8be.2e59",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "R√©cup√©ration initiale des commerces au lancement ",
        "info": "",
        "x": 1080,
        "y": 40,
        "wires": []
    },
    {
        "id": "2d64e390.d0db64",
        "type": "inject",
        "z": "8b9071f7.6ad848",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "b4376610.d58278",
                "8ba87799.ac833",
                "81be13b2.50197",
                "3b51615a.d5135e",
                "3d5949ae.8d7186"
            ]
        ]
    },
    {
        "id": "b4376610.d58278",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "parkings",
        "operation": "find",
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "91188c56.eea628"
            ]
        ]
    },
    {
        "id": "4ee3a771.510c18",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 80,
        "wires": []
    },
    {
        "id": "91188c56.eea628",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    parking = msg.payload[p]\n    parking.currentPeople = 0;\n    parking.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        parking.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            parking.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < parking.sensorsDatas.length; ++i){\n        if (parking.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (parking.sensorsDatas[i].date.getDay() == j && \n                    parking.sensorsDatas[i].date.getHours() == h){\n                        parking.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            parking.stat[j][h] = parking.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(parking);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 80,
        "wires": [
            [
                "a8cd4c10.05d8d8"
            ]
        ]
    },
    {
        "id": "a8cd4c10.05d8d8",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorParkings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 80,
        "wires": [
            [
                "4ee3a771.510c18"
            ]
        ]
    },
    {
        "id": "3c434a2f.181216",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 140,
        "wires": []
    },
    {
        "id": "8d6e8d8f.0ceeb8",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    commerce = msg.payload[p]\n    commerce.currentPeople = 0;\n    commerce.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        commerce.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            commerce.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < commerce.sensorsDatas.length; ++i){\n        if (commerce.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (commerce.sensorsDatas[i].date.getDay() == j && \n                        commerce.sensorsDatas[i].date.getHours() == h){\n                        commerce.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            commerce.stat[j][h] = commerce.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(commerce);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 140,
        "wires": [
            [
                "56cdb836.f02f38"
            ]
        ]
    },
    {
        "id": "56cdb836.f02f38",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorCommerces",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 140,
        "wires": [
            [
                "3c434a2f.181216"
            ]
        ]
    },
    {
        "id": "8ba87799.ac833",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "commerces",
        "operation": "find",
        "x": 1150,
        "y": 140,
        "wires": [
            [
                "8d6e8d8f.0ceeb8"
            ]
        ]
    },
    {
        "id": "a441ba41.98ff98",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "R√©cup√©ration des commerces et remise a zero quotidienne",
        "info": "",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "e0469651.4e437",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "cd96fa45.e4f66",
        "client": "",
        "x": 660,
        "y": 520,
        "wires": []
    },
    {
        "id": "fc292413.c6478",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "sensorParkings = flow.get(\"sensorParkings\");\n\nfor ( i = 0 ; i < sensorParkings.length ; ++i ){\n    for ( j = 0; j < sensorParkings[i].sensorIdArray.length; ++j ){\n        if ( sensorParkings[i].sensorIdArray[j] == msg.payload.sensorId){\n            \n            temp={};\n            temp._id = sensorParkings[i]._id;\n            \n            if ( msg.payload.type == \"in\" ){\n                sensorParkings[i].currentPeople += 1;\n            }else if ( msg.payload.type == \"out\"){\n                sensorParkings[i].currentPeople -= 1;\n            }\n           \n            temp.currentPeople = sensorParkings[i].currentPeople;\n            flow.set(\"sensorParkings\", sensorParkings);\n            msg.payload = temp;\n            return msg;\n        } \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 520,
        "wires": [
            [
                "e0469651.4e437",
                "8fcf1452.cab698"
            ]
        ]
    },
    {
        "id": "8fcf1452.cab698",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "193daddd.6e832a",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "54651cc0.ab9ae4",
        "client": "",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "8c589ae4.4ea93",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "sensorCommerces = flow.get(\"sensorCommerces\");\n\nfor ( i = 0 ; i < sensorCommerces.length ; ++i ){\n    for ( j = 0; j < sensorCommerces[i].sensorIdArray.length; ++j ){\n        if ( sensorCommerces[i].sensorIdArray[j] == msg.payload.sensorId){\n            \n            temp={};\n            temp._id = sensorCommerces[i]._id;\n            \n            if ( msg.payload.type == \"in\" ){\n                sensorCommerces[i].currentPeople += 1;\n            }else if ( msg.payload.type == \"out\"){\n                sensorCommerces[i].currentPeople -= 1;\n            }\n           \n            temp.currentPeople = sensorCommerces[i].currentPeople;\n            flow.set(\"sensorCommerces\", sensorCommerces);\n            msg.payload = temp;\n            return msg;\n        } \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 220,
        "wires": [
            [
                "193daddd.6e832a",
                "7ea9c8c4.a3ccb"
            ]
        ]
    },
    {
        "id": "7ea9c8c4.a3ccb",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "dd24a08b.1f4d6",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "d7bb78d3.368ad",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "dd24a08b.1f4d6"
            ]
        ]
    },
    {
        "id": "c3447bd5.6229f8",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "f0b098ac.865b88",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "d7bb78d3.368ad"
            ]
        ]
    },
    {
        "id": "246a3501.1b332a",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "[MQTT] reception valeurs capteur commerce",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "fe14f487.ad2ff",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "[MQTT] reception valeurs capteur parking",
        "info": "",
        "x": 190,
        "y": 340,
        "wires": []
    },
    {
        "id": "f836c72c.49eed8",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Archivage dans la basse de donn√©es",
        "info": "",
        "x": 540,
        "y": 40,
        "wires": []
    },
    {
        "id": "8d56362b.932b1",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Archivage dans la basse de donn√©es",
        "info": "",
        "x": 540,
        "y": 340,
        "wires": []
    },
    {
        "id": "cb7871b1.10469",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Envois du nombre de personne actuel pour le commerce",
        "info": "",
        "x": 600,
        "y": 180,
        "wires": []
    },
    {
        "id": "a40f6cce.2c4e88",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Envois du nombre de voitures actuel pour le parking",
        "info": "",
        "x": 590,
        "y": 480,
        "wires": []
    },
    {
        "id": "62eea782.bb38d",
        "type": "websocket in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "54651cc0.ab9ae4",
        "client": "",
        "x": 100,
        "y": 900,
        "wires": [
            [
                "7500fc20.a076fc"
            ]
        ]
    },
    {
        "id": "1a81d2f3.dfaf0d",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "54651cc0.ab9ae4",
        "client": "",
        "x": 430,
        "y": 900,
        "wires": []
    },
    {
        "id": "7500fc20.a076fc",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "msg.payload = flow.get(\"sensorCommerces\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 900,
        "wires": [
            [
                "1a81d2f3.dfaf0d"
            ]
        ]
    },
    {
        "id": "bdb0b37a.36ccd",
        "type": "websocket in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "cd96fa45.e4f66",
        "client": "",
        "x": 110,
        "y": 960,
        "wires": [
            [
                "535c15dc.25085c"
            ]
        ]
    },
    {
        "id": "555526c9.23c3e8",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "cd96fa45.e4f66",
        "client": "",
        "x": 420,
        "y": 960,
        "wires": []
    },
    {
        "id": "535c15dc.25085c",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "msg.payload = flow.get(\"sensorParkings\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 960,
        "wires": [
            [
                "555526c9.23c3e8"
            ]
        ]
    },
    {
        "id": "5012ddf5.07e81c",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "3a960f68.dfb54",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "dc8e5f62.2af88",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 100,
        "wires": [
            [
                "5012ddf5.07e81c"
            ]
        ]
    },
    {
        "id": "f20e6fe4.2bf71",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "f0b098ac.865b88",
        "x": 1060,
        "y": 160,
        "wires": []
    },
    {
        "id": "b2a85fa9.ee0ac",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 160,
        "wires": [
            [
                "f20e6fe4.2bf71"
            ]
        ]
    },
    {
        "id": "84ed4b89.5231f8",
        "type": "mongodb in",
        "z": "bd329ca2.49e1c",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "lignes",
        "operation": "find",
        "x": 280,
        "y": 640,
        "wires": [
            [
                "ef2203ee.1fba8"
            ]
        ]
    },
    {
        "id": "bcb39fe8.886dd8",
        "type": "inject",
        "z": "bd329ca2.49e1c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "idBus",
                "v": "1167",
                "vt": "str"
            },
            {
                "p": "idLigne",
                "v": "10",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"_id\":10}",
        "payloadType": "json",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "84ed4b89.5231f8"
            ]
        ]
    },
    {
        "id": "ef2203ee.1fba8",
        "type": "change",
        "z": "bd329ca2.49e1c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ligne",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 640,
        "wires": [
            [
                "b0af9ebe.f6e9b"
            ]
        ]
    },
    {
        "id": "b0af9ebe.f6e9b",
        "type": "mongodb in",
        "z": "bd329ca2.49e1c",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "arrets",
        "operation": "find",
        "x": 640,
        "y": 640,
        "wires": [
            [
                "cfaedfa1.dca7f"
            ]
        ]
    },
    {
        "id": "cfaedfa1.dca7f",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "/*  \n    Cr√©ation de la requette a l'API de project-osrm.org qui retourne les informations \n    sur un trajets. La requette se compose de tous les point g√©ographique que la \n    route doit emprunter. Ces points sont repr√©sent√© par leur coordonn√©es s√©par√©es \n    par une vigule. Les points sont s√©par√©s par des points virgule.\n    \n    Ce qui nous interresse dans la r√©ponse sont les nodes et la dur√©e du trajet \n    d'une node a la suivante qui sont contenue dans le champs annotation.\n\n*/\nlet arrets = msg.payload;\nlet ligne = msg.ligne;\nlet reqString = \"http://router.project-osrm.org/route/v1/driving/\";\n\nfor (i = 0; i < ligne.bus_route.length ; i++){\n    for (a =0; a< arrets.length; a++){\n        if (ligne.bus_route[i] == arrets[a]._id){\n            reqString = reqString + arrets[a].coordonnees[1] + \",\" + arrets[a].coordonnees[0] ;\n            reqString = reqString + \";\";\n        }\n    }\n}\nreqString = reqString.slice(0, -1);\n\nreqString = reqString + \"?alternatives=false&continue_straight=false&annotations=nodes,duration\";\nmsg.arrets = arrets;\nmsg.payload = reqString\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 640,
        "wires": [
            [
                "5280874c.bcf8b"
            ]
        ]
    },
    {
        "id": "5280874c.bcf8b",
        "type": "http request",
        "z": "bd329ca2.49e1c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1070,
        "y": 640,
        "wires": [
            [
                "771feb72.e73874"
            ]
        ]
    },
    {
        "id": "771feb72.e73874",
        "type": "json",
        "z": "bd329ca2.49e1c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "19293c2c.4c63c4"
            ]
        ]
    },
    {
        "id": "eed6fd39.7b26",
        "type": "json",
        "z": "bd329ca2.49e1c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 760,
        "wires": [
            [
                "7bd85c3b.335f54"
            ]
        ]
    },
    {
        "id": "7bd85c3b.335f54",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "/*\n    On cr√©e les messages que le bus enverrait si il circulais en suivant le trajet.\n    Ils sont envoy√©s tous ensemble puis seront delay√©s dans la suite du flow.\n    Un message contient dans son payload les identifiants du bus et de la ligne\n    ainsi que la possition du bus.\n    msg.delay est le temps entre le d√©part et l'arriv√© au coordon√©es \n*/\n\nmsgArray = [];\nnodes = msg.nodes\nnodesData = msg.payload.osm.node;  //contient toutes les nodes par lequel le bus vas passer\ndelays = msg.durations;  //contient le temps de trajets entre les nodes\n\ndelaySum = 0; // contient le temps entre le d√©part du bus et une node\n\nfor( i = 0; i < nodes.length; i++){\n    node = null\n    let j = 0;\n    while (  node == null && j < nodesData.length){\n        if (nodesData[j].id == nodes[i]){\n            node = nodesData[j];\n        }\n        j++ \n    }\n    \n\n    // Comptenu du message : \n    payload = {};\n    payload.idBus = msg.idBus;\n    payload.idLigne = msg.idLigne;\n    payload.lat = node.lat;\n    payload.lon = node.lon;\n    \n    newMsg = {};\n    newMsg.payload = payload;\n    \n    // delais entre l'entr√© dans la node delay et sa sortie en Millisecondes\n    delaySum = delaySum + ( delays[i] * 1000)\n    newMsg.delay = delaySum;\n    \n    msgArray.push( newMsg );\n}\n\nmsgTemp = {};\nmsgTemp.payload = msgArray\nreturn [ msgArray ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 760,
        "wires": [
            [
                "d8a5e54b.a02e88"
            ]
        ]
    },
    {
        "id": "d8a5e54b.a02e88",
        "type": "delay",
        "z": "bd329ca2.49e1c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1100,
        "y": 760,
        "wires": [
            [
                "96b62a60.c3c47"
            ]
        ]
    },
    {
        "id": "96b62a60.c3c47",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurBusPos",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d4da33c.cb6318",
        "x": 1280,
        "y": 760,
        "wires": []
    },
    {
        "id": "a14e539e.1a4438",
        "type": "mqtt in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "topic": "CapteurBus",
        "qos": "2",
        "datatype": "auto",
        "broker": "8d4da33c.cb6318",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 680,
        "wires": [
            [
                "fba4d227.9a1868"
            ]
        ]
    },
    {
        "id": "fba4d227.9a1868",
        "type": "json",
        "z": "8b9071f7.6ad848",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 680,
        "wires": [
            [
                "4f55e4d8.7ef57c",
                "8e927999.88575",
                "1d63d776.44b6f1"
            ]
        ]
    },
    {
        "id": "4f55e4d8.7ef57c",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "var sensorId = msg.payload.sensorId;\nvar type = msg.payload.type;\nvar date = new Date();\n\nmsg.query= {\"sensorIdArray\": sensorId};\nmsg.payload = { \"$push\": {\"sensorsDatas\": {\"date\": date, \"type\":type, \"sensorId\":sensorId}} };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "a564a16e.5560d",
                "6e4d1409.df708c"
            ]
        ]
    },
    {
        "id": "a564a16e.5560d",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "f870a023.7f9c98",
        "type": "mqtt in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "topic": "CapteurBusPos",
        "qos": "2",
        "datatype": "auto",
        "broker": "8d4da33c.cb6318",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1120,
        "y": 840,
        "wires": [
            [
                "9d6e8159.efcd28"
            ]
        ]
    },
    {
        "id": "9d6e8159.efcd28",
        "type": "json",
        "z": "8b9071f7.6ad848",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1290,
        "y": 840,
        "wires": [
            [
                "811ae131.e24288",
                "634ed721.d343c8"
            ]
        ]
    },
    {
        "id": "8b9c0f64.842",
        "type": "websocket in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "941d827f.4c8a6",
        "client": "",
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "438c81d6.f10128"
            ]
        ]
    },
    {
        "id": "7b0d0bcf.9dca24",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "941d827f.4c8a6",
        "client": "",
        "x": 400,
        "y": 1020,
        "wires": []
    },
    {
        "id": "438c81d6.f10128",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "msg.payload = flow.get(\"sensorBus\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1020,
        "wires": [
            [
                "7b0d0bcf.9dca24"
            ]
        ]
    },
    {
        "id": "418ce256.95487c",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 200,
        "wires": []
    },
    {
        "id": "6ed705de.247224",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    bus = msg.payload[p]\n    bus.currentPeople = 0;\n    bus.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        bus.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            bus.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < bus.sensorsDatas.length; ++i){\n        if (bus.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (bus.sensorsDatas[i].date.getDay() == j && \n                        bus.sensorsDatas[i].date.getHours() == h){\n                        bus.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            bus.stat[j][h] = bus.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(bus);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 200,
        "wires": [
            [
                "e02c4b83.4a6b98"
            ]
        ]
    },
    {
        "id": "e02c4b83.4a6b98",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorBus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "418ce256.95487c"
            ]
        ]
    },
    {
        "id": "81be13b2.50197",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "bus",
        "operation": "find",
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "6ed705de.247224"
            ]
        ]
    },
    {
        "id": "d0cae799.ec81b",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 260,
        "wires": []
    },
    {
        "id": "64b94442.7dfa5c",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = msg.payload;\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 260,
        "wires": [
            [
                "427d3a8a.a0626c"
            ]
        ]
    },
    {
        "id": "427d3a8a.a0626c",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Arrets",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 260,
        "wires": [
            [
                "d0cae799.ec81b"
            ]
        ]
    },
    {
        "id": "3b51615a.d5135e",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "arrets",
        "operation": "find",
        "x": 1140,
        "y": 260,
        "wires": [
            [
                "64b94442.7dfa5c"
            ]
        ]
    },
    {
        "id": "402b1b58.27b23c",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 320,
        "wires": []
    },
    {
        "id": "59184c4b.1af86c",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = msg.payload;\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 320,
        "wires": [
            [
                "bbdef49e.a1347"
            ]
        ]
    },
    {
        "id": "bbdef49e.a1347",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lignes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 320,
        "wires": [
            [
                "402b1b58.27b23c"
            ]
        ]
    },
    {
        "id": "3d5949ae.8d7186",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "lignes",
        "operation": "find",
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "59184c4b.1af86c"
            ]
        ]
    },
    {
        "id": "74ce08ab.a4c648",
        "type": "websocket in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "e991ef01.29e098",
        "client": "",
        "x": 610,
        "y": 960,
        "wires": [
            [
                "ca1d2049.d0d11"
            ]
        ]
    },
    {
        "id": "699fa458.223974",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "e991ef01.29e098",
        "client": "",
        "x": 910,
        "y": 960,
        "wires": []
    },
    {
        "id": "ca1d2049.d0d11",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "msg.payload = flow.get(\"sensorArrets\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 960,
        "wires": [
            [
                "699fa458.223974"
            ]
        ]
    },
    {
        "id": "4a9f6c2e.cc3014",
        "type": "websocket in",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "e781ed8.8a07d1",
        "client": "",
        "x": 600,
        "y": 1020,
        "wires": [
            [
                "3fa94ca7.118e1c"
            ]
        ]
    },
    {
        "id": "60c8e5f6.3f6db4",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "e781ed8.8a07d1",
        "client": "",
        "x": 890,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3fa94ca7.118e1c",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "msg.payload = flow.get(\"sensorLignes\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "60c8e5f6.3f6db4"
            ]
        ]
    },
    {
        "id": "ec08e79a.78f578",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Recuperer les donn√©es de la ligne",
        "info": "",
        "x": 190,
        "y": 600,
        "wires": []
    },
    {
        "id": "1dda2fad.62cf",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Recuperer les donn√©es des arrets de la ligne",
        "info": "",
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "2ab30ba9.4e7acc",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Pr√©paration donn√©es pour requ√™te",
        "info": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "d77a03d4.9e28f8",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Requ√™te API project-osrm.org pour obtenir les noeuds du trajet",
        "info": "",
        "x": 1220,
        "y": 600,
        "wires": []
    },
    {
        "id": "10acec44.33255c",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Pr√©paration pour r√©cup√©rer la coordonn√© Gps des noeuds",
        "info": "",
        "x": 260,
        "y": 720,
        "wires": []
    },
    {
        "id": "8eb91480.5ec2a",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Traitement de la donn√©e pour pr√©parer le message du capteur et le delais entre les messages",
        "info": "",
        "x": 870,
        "y": 720,
        "wires": []
    },
    {
        "id": "e9370774.43e708",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Simulation du d√©placement d'un bus, avec envois des coordonn√©s GPS a des interval logiques",
        "info": "",
        "x": 330,
        "y": 500,
        "wires": []
    },
    {
        "id": "5aff259c.94c70c",
        "type": "inject",
        "z": "bd329ca2.49e1c",
        "name": "String sensorId and values",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sensorId\":\"1167_in\",\"type\":\"in\"}",
        "payloadType": "str",
        "x": 1470,
        "y": 100,
        "wires": [
            [
                "7d6868de.dffce"
            ]
        ]
    },
    {
        "id": "7d6868de.dffce",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurBus",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d4da33c.cb6318",
        "x": 1670,
        "y": 100,
        "wires": []
    },
    {
        "id": "5817e607.ced1e",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer entr√©e",
        "group": "a9a0c9d7.b75908",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer entr√©e",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 300,
        "wires": [
            [
                "4badfc0a.8420b4"
            ]
        ]
    },
    {
        "id": "4badfc0a.8420b4",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdCommerce\"),\"type\":\"in\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1580,
        "y": 300,
        "wires": [
            [
                "fe82de22.267268"
            ]
        ]
    },
    {
        "id": "fe82de22.267268",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurBus",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d4da33c.cb6318",
        "x": 1730,
        "y": 300,
        "wires": []
    },
    {
        "id": "b7cd4225.2d1088",
        "type": "ui_button",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer sortie",
        "group": "a9a0c9d7.b75908",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Envoyer sortie",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "8bd5828b.798688"
            ]
        ]
    },
    {
        "id": "8bd5828b.798688",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "msg.payload = {\"sensorId\": flow.get(\"sensorIdCommerce\"),\"type\":\"out\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1580,
        "y": 360,
        "wires": [
            [
                "e42bc0be.90f48"
            ]
        ]
    },
    {
        "id": "e42bc0be.90f48",
        "type": "mqtt out",
        "z": "bd329ca2.49e1c",
        "name": "",
        "topic": "CapteurBus",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8d4da33c.cb6318",
        "x": 1730,
        "y": 360,
        "wires": []
    },
    {
        "id": "1c418ecc.712e01",
        "type": "ui_text_input",
        "z": "bd329ca2.49e1c",
        "name": "",
        "label": "ID capteur",
        "tooltip": "",
        "group": "a9a0c9d7.b75908",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "topicType": "msg",
        "x": 1400,
        "y": 200,
        "wires": [
            [
                "1b471882.20c0bf"
            ]
        ]
    },
    {
        "id": "1b471882.20c0bf",
        "type": "change",
        "z": "bd329ca2.49e1c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIdCommerce",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a5ccde7e.057768",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoyer in au bus 1167 via le capteur  \"1167_in\"",
        "info": "",
        "x": 1510,
        "y": 60,
        "wires": []
    },
    {
        "id": "c8d90a18.83d318",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Set flow.sensorId du bus",
        "info": "",
        "x": 1460,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d5d7721.c967b",
        "type": "comment",
        "z": "bd329ca2.49e1c",
        "name": "Envoye une entr√©e ou une sortie apr√®s avoir appuyer les boutons",
        "info": "",
        "x": 1570,
        "y": 260,
        "wires": []
    },
    {
        "id": "6e4d1409.df708c",
        "type": "mongodb out",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "bus",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 650,
        "y": 680,
        "wires": []
    },
    {
        "id": "c8089d06.c3b2c",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "941d827f.4c8a6",
        "client": "",
        "x": 640,
        "y": 820,
        "wires": []
    },
    {
        "id": "8e927999.88575",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "sensorBus = flow.get(\"sensorBus\");\n\nfor ( i = 0 ; i < sensorBus.length ; ++i ){\n    for ( j = 0; j < sensorBus[i].sensorIdArray.length; ++j ){\n        if ( sensorBus[i].sensorIdArray[j] == msg.payload.sensorId){\n            \n            temp={};\n            temp._id = sensorBus[i]._id;\n            \n            if ( msg.payload.type == \"in\" ){\n                sensorBus[i].currentPeople += 1;\n            }else if ( msg.payload.type == \"out\"){\n                sensorBus[i].currentPeople -= 1;\n            }\n           \n            temp.currentPeople = sensorBus[i].currentPeople;\n            flow.set(\"sensorBus\", sensorBus);\n            msg.payload = temp;\n            return msg;\n        } \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 820,
        "wires": [
            [
                "c8089d06.c3b2c",
                "4b1f94c4.5c9dbc"
            ]
        ]
    },
    {
        "id": "4b1f94c4.5c9dbc",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 880,
        "wires": []
    },
    {
        "id": "f6a973ae.7ece68",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Archivage dans la basse de donn√©es",
        "info": "",
        "x": 540,
        "y": 640,
        "wires": []
    },
    {
        "id": "481421ab.b0dee",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "Envois du nombre de voitures actuel pour le bus",
        "info": "",
        "x": 570,
        "y": 780,
        "wires": []
    },
    {
        "id": "5839eb6e.3653ac",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "37dcd7d0.725158",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "5839eb6e.3653ac"
            ]
        ]
    },
    {
        "id": "1806dab1.ad0f85",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "f7301b08.c632c",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "37dcd7d0.725158"
            ]
        ]
    },
    {
        "id": "fe4c3011.f2936",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "3ffbac36.c46ba4",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "51e07697.f8eac"
            ]
        ]
    },
    {
        "id": "8d55a211.4a1968",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "51e07697.f8eac",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 280,
        "wires": [
            [
                "8d55a211.4a1968"
            ]
        ]
    },
    {
        "id": "bf1b8166.3af538",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "40512fb3.0355a8",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "6c9348db.ae9e5"
            ]
        ]
    },
    {
        "id": "21e00cc3.1fff74",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "6c9348db.ae9e5",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "21e00cc3.1fff74"
            ]
        ]
    },
    {
        "id": "af890dd4.83408",
        "type": "debug",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "675beb92.4399e4",
        "type": "json",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "af890dd4.83408"
            ]
        ]
    },
    {
        "id": "a11ff133.e97c48",
        "type": "websocket in",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "d55b5b7e.6a0a8",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "675beb92.4399e4"
            ]
        ]
    },
    {
        "id": "d6572154.03832",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "40512fb3.0355a8",
        "x": 1050,
        "y": 220,
        "wires": []
    },
    {
        "id": "94fbde8b.29de98",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 220,
        "wires": [
            [
                "d6572154.03832"
            ]
        ]
    },
    {
        "id": "4c9ca71d.5b0bc",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "3ffbac36.c46ba4",
        "x": 1050,
        "y": 280,
        "wires": []
    },
    {
        "id": "71673ba5.3426ec",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 280,
        "wires": [
            [
                "4c9ca71d.5b0bc"
            ]
        ]
    },
    {
        "id": "28b85595.ecea02",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "f7301b08.c632c",
        "x": 1040,
        "y": 340,
        "wires": []
    },
    {
        "id": "30574d86.46778a",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 340,
        "wires": [
            [
                "28b85595.ecea02"
            ]
        ]
    },
    {
        "id": "da53437b.3c5cf8",
        "type": "websocket out",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "server": "",
        "client": "d55b5b7e.6a0a8",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "edf34c61.83e498",
        "type": "inject",
        "z": "a6592cfa.8a3a9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 400,
        "wires": [
            [
                "da53437b.3c5cf8"
            ]
        ]
    },
    {
        "id": "513b667e.9fc298",
        "type": "websocket out",
        "z": "8b9071f7.6ad848",
        "name": "",
        "server": "ab307ed3.132828",
        "client": "",
        "x": 1710,
        "y": 860,
        "wires": []
    },
    {
        "id": "1884e4a2.3e65fb",
        "type": "comment",
        "z": "a6592cfa.8a3a9",
        "name": "Ecoute sur les websockets",
        "info": "",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "19952452.4d7754",
        "type": "comment",
        "z": "a6592cfa.8a3a9",
        "name": "Test connection a websocket",
        "info": "",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "19293c2c.4c63c4",
        "type": "function",
        "z": "bd329ca2.49e1c",
        "name": "",
        "func": "/*\n    On veut r√©cup√©rer les coordonn√©es GPS des noeuds du trajet pour cela on utilise \n    l'API OpenStreetMap qui renvoie les information des noeuds.\n    On pr√©pare aussi la donn√©e re√ßue par l'API prec√©dente pour la conserver dans \n    nodes et duration.\n*/\ntrajet = msg.payload.routes[0];\nnodes = [];\ndurations = [];\n\nlet request = \"https://api.openstreetmap.org/api/0.6/nodes?nodes=\";\n\nfor( i = 0; i < trajet.legs.length; i++ ){\n    for( j = 0; j < trajet.legs[i].annotation.nodes.length; j++ ){\n        let n = trajet.legs[i].annotation.nodes[j];\n        request = request + n + \",\";\n        nodes.push( n )\n    }    \n    for( k = 0; k < trajet.legs[i].annotation.duration.length; k++ ){\n        let d = trajet.legs[i].annotation.duration[k];\n        durations.push( d )\n    }\n}\n\nrequest = request.slice(0, -1);\nmsg.payload = request;\n\nmsg.nodes = nodes.reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return a;},[]);;\nmsg.durations = durations;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 760,
        "wires": [
            [
                "bec858c1.c68138"
            ]
        ]
    },
    {
        "id": "bec858c1.c68138",
        "type": "http request",
        "z": "bd329ca2.49e1c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 310,
        "y": 760,
        "wires": [
            [
                "94970235.d94da"
            ]
        ]
    },
    {
        "id": "94970235.d94da",
        "type": "xml2json",
        "z": "bd329ca2.49e1c",
        "name": "Parse xml string to json string",
        "x": 560,
        "y": 760,
        "wires": [
            [
                "eed6fd39.7b26"
            ]
        ]
    },
    {
        "id": "c2367f27.a2851",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Debug contenus de la collection commerces",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "20748835.7f92d8",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Debug contenus de la collection parking",
        "info": "",
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "3fc50711.4543c8",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "bus",
        "operation": "find",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "ffc96598.24c9c"
            ]
        ]
    },
    {
        "id": "b4eb10a4.82b6b",
        "type": "inject",
        "z": "868e002.b1115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "3fc50711.4543c8"
            ]
        ]
    },
    {
        "id": "ffc96598.24c9c",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 460,
        "wires": [
            [
                "f3ee52d3.274b78"
            ]
        ]
    },
    {
        "id": "f3ee52d3.274b78",
        "type": "debug",
        "z": "868e002.b1115",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 460,
        "wires": []
    },
    {
        "id": "3d0c58ae.0a98",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "arrets",
        "operation": "find",
        "x": 300,
        "y": 560,
        "wires": [
            [
                "fc59e857.4f0428"
            ]
        ]
    },
    {
        "id": "e408d3f0.0f8f1",
        "type": "inject",
        "z": "868e002.b1115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "3d0c58ae.0a98"
            ]
        ]
    },
    {
        "id": "fc59e857.4f0428",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "1dd5f2fa.cc76dd"
            ]
        ]
    },
    {
        "id": "1dd5f2fa.cc76dd",
        "type": "debug",
        "z": "868e002.b1115",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "768b152b.5bbafc",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Debug contenus de la collection bus",
        "info": "",
        "x": 180,
        "y": 420,
        "wires": []
    },
    {
        "id": "d6e83330.e817a8",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Debug contenus de la collection parking",
        "info": "",
        "x": 190,
        "y": 520,
        "wires": []
    },
    {
        "id": "d119a9f.92d83d8",
        "type": "mongodb in",
        "z": "868e002.b1115",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "lignes",
        "operation": "find",
        "x": 300,
        "y": 660,
        "wires": [
            [
                "c484d94d.187d68"
            ]
        ]
    },
    {
        "id": "6400714d.dd37d8",
        "type": "inject",
        "z": "868e002.b1115",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "d119a9f.92d83d8"
            ]
        ]
    },
    {
        "id": "c484d94d.187d68",
        "type": "function",
        "z": "868e002.b1115",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 660,
        "wires": [
            [
                "374c5623.88cb32"
            ]
        ]
    },
    {
        "id": "374c5623.88cb32",
        "type": "debug",
        "z": "868e002.b1115",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "5e0e7493.4e6a7c",
        "type": "comment",
        "z": "868e002.b1115",
        "name": "Debug contenus de la collection lignes",
        "info": "",
        "x": 180,
        "y": 620,
        "wires": []
    },
    {
        "id": "d55c03c1.a1aa48",
        "type": "comment",
        "z": "8b9071f7.6ad848",
        "name": "[MQTT] reception valeurs  (in/out) capteur parking",
        "info": "",
        "x": 220,
        "y": 640,
        "wires": []
    },
    {
        "id": "dcd60b83.0cca28",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 540,
        "wires": []
    },
    {
        "id": "6dd99cb3.c17454",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = [];\nfor (p =0 ; p < msg.payload.length; ++p){\n    \n    bus = msg.payload[p]\n    bus.currentPeople = 0;\n    bus.stat=[]\n    nbDays = [];\n    for (j = 0; j < 7; ++j){\n        nbDays[j] = 0;\n        bus.stat[j] = [];\n        for(h = 0; h < 24; ++h){\n            bus.stat[j][h] = 0 ;\n        }\n    }\n    let prevDate = null;\n    for ( i =0; i < bus.sensorsDatas.length; ++i){\n        if (bus.sensorsDatas[i].type == \"in\"){\n            for (j = 0; j < 7; ++j){\n                nbDays[j] += 1;\n                for(h = 0; h < 24; ++h){\n                    if (bus.sensorsDatas[i].date.getDay() == j && \n                        bus.sensorsDatas[i].date.getHours() == h){\n                        bus.stat[j][h] +=1 ;\n                    }\n                }\n            }\n        }\n    }\n    for (j = 0; j < 7; ++j){\n        for(h = 0; h < 24; ++h){\n            bus.stat[j][h] = bus.stat[j][h] / nbDays[j] ;\n        }\n    }\n    newMsg.payload.push(bus);\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "d3ef695d.9e17e8"
            ]
        ]
    },
    {
        "id": "d3ef695d.9e17e8",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorBus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 540,
        "wires": [
            [
                "dcd60b83.0cca28"
            ]
        ]
    },
    {
        "id": "9192c8e6.baa7d8",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "bus",
        "operation": "find",
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "6dd99cb3.c17454"
            ]
        ]
    },
    {
        "id": "2dac5bf2.01a4b4",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 600,
        "wires": []
    },
    {
        "id": "7ba26d3.b3e0614",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = msg.payload;\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 600,
        "wires": [
            [
                "1035fd63.2b0263"
            ]
        ]
    },
    {
        "id": "1035fd63.2b0263",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Arrets",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 600,
        "wires": [
            [
                "2dac5bf2.01a4b4"
            ]
        ]
    },
    {
        "id": "a01b5cb3.87832",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "arrets",
        "operation": "find",
        "x": 1140,
        "y": 600,
        "wires": [
            [
                "7ba26d3.b3e0614"
            ]
        ]
    },
    {
        "id": "5f138b1f.57bd04",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 660,
        "wires": []
    },
    {
        "id": "27815974.5ac826",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "newMsg = {};\nnewMsg.payload = msg.payload;\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 660,
        "wires": [
            [
                "39aaec2f.7530bc"
            ]
        ]
    },
    {
        "id": "39aaec2f.7530bc",
        "type": "change",
        "z": "8b9071f7.6ad848",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lignes",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 660,
        "wires": [
            [
                "5f138b1f.57bd04"
            ]
        ]
    },
    {
        "id": "82d50cb3.15f2a8",
        "type": "mongodb in",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "lignes",
        "operation": "find",
        "x": 1140,
        "y": 660,
        "wires": [
            [
                "27815974.5ac826"
            ]
        ]
    },
    {
        "id": "811ae131.e24288",
        "type": "function",
        "z": "8b9071f7.6ad848",
        "name": "",
        "func": "const seuilDistance = 20 // distance en m√®tre en dessous de laquel on consid√©re que le bus est a l'arret\n\nfunction degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n}\n\nfunction distanceInKmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {\n  var earthRadiusKm = 6371;\n\n  var dLat = degreesToRadians(lat2-lat1);\n  var dLon = degreesToRadians(lon2-lon1);\n\n  lat1 = degreesToRadians(lat1);\n  lat2 = degreesToRadians(lat2);\n\n  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n  return earthRadiusKm * c;\n}\n\nlet idLigne = msg.payload.idLigne\nlet lignes = flow.get(\"Lignes\");\nlet ligne={};\nlet n;\nlet arrets = flow.get(\"Arrets\");\nlet newMsg = null;\nlet newMsg2 = {};\nlet newMsg3 = {};\nlet date = new Date();\n\n// Selectionner la ligne sur laquel le bus est\nfor ( i = 0; i < lignes.length; i++ ){\n    if ( lignes[i]._id == idLigne){\n      ligne = lignes[i];\n      n = i;\n      i = lignes.length;\n    }\n}\n\nlet lastRegistredStopId = null\nlet lastRegistredStop =  lignes[n].bus_passage_at_stop[ (lignes[n].bus_passage_at_stop.length) - 1 ]\nif ( lastRegistredStop !== undefined){\n    lastRegistredStopId = lastRegistredStop.idArret;\n}\n\n// parcourir tous les arrets de bus pour savoir s'il y en a un a moins de 5m\nfor (i = 0; i < ligne.bus_route.length; i++ ){\n    idBusStop = ligne.bus_route[i];// l'arr√™t de bus dont on veux les infos\n    \n    // Parcourrir les arret pour trouver les infos de cet arr√™t\n    for (j = 0; j < arrets.length; j++ ){\n        let arret = arrets[j]; // l'arr√™t de bus evalu√© a ce tour de boucle\n        \n        // Si on a trouv√© l'arret de m√™me id\n        if ( arret._id == idBusStop){\n            \n            // on √©value sa distance au bus\n            d = distanceInKmBetweenEarthCoordinates(arret.coordonnees[0], arret.coordonnees[1], msg.payload.lat, msg.payload.lon);\n            d = d * 1000 //conversion en m\n            if ( (d < seuilDistance) && (lastRegistredStopId !== arret._id) ){\n                \n                //if ( lastRegistredStopId !== arret._id){\n                \n                    newMsg = {};\n                    newMsg.query= {\"name\": ligne.name };\n                    newMsg.payload = { \"$push\": {\"bus_passage_at_stop\": {\"date\": date, \"idArret\" :arret._id }} };\n                    \n                    lignes[n].bus_passage_at_stop.push({\"date\": date, \"idArret\" :arret._id })\n                //}\n            }\n        }\n    }\n}\n\nlet timeSinceLastStop  = 0\n// time in secondes/ substraction of two dates returns time in Milliseconds\nif (lastRegistredStop !== undefined ){\n    timeSinceLastStop  =  (date - lastRegistredStop.date) / 1000;\n} \n\n\n// pour quand un bus n'as pas voyag√© depuis plus d'une heure, l√† pour empecher les bug pendant les tests\nif ( timeSinceLastStop >  60 * 60){\n    timeSinceLastStop = 0;\n}\n\n// calcul du temps pour aller au prochain arret sur cette ligne\nlet timeSum = 0;\nlet nbFoisTrajetLastToNext = 0;\n// On parcourt les arrets par lequel les bus sont pass√© sur la ligne\nfor ( i = 0; i<  ligne.bus_passage_at_stop.length - 1 ; i++){\n    // si on trouve un passage a un arret identique au pr√©cedent \n    if( ligne.bus_passage_at_stop[i].idArret == lastRegistredStopId  ){\n        nbFoisTrajetLastToNext ++;\n        j = i+1;\n        timeSum = timeSum + ( ligne.bus_passage_at_stop[j].date - ligne.bus_passage_at_stop[i].date )\n    }\n}\n// timeSum en secondes\ntimeSum = timeSum/1000;\n\nlet tempsMoyenEntreArret = 0;\nlet tempsAvantLeProchainArret = 0;\n\n\n// le temps moyens du trajet moins le temps de trajet d√©ja effectu√©\nif (nbFoisTrajetLastToNext !== 0 ){\n    tempsMoyenEntreArret= timeSum / nbFoisTrajetLastToNext;\n    tempsAvantLeProchainArret = tempsMoyenEntreArret - timeSinceLastStop;\n}\n\nnewMsg2.payload ={\n    \"idBus\" : msg.payload.idBus,\n    \"idLigne\" : msg.payload.idLigne,\n    \"lat\" : msg.payload.lat,\n    \"lon\" : msg.payload.lon,\n    \"timeToNextStopInSecondes\" : tempsAvantLeProchainArret,\n};\n\nnewMsg3.payload ={\n    \"timeSum\":timeSum,\n    \"nbFoisTrajetLastToNext\":nbFoisTrajetLastToNext,\n    \"tempsMoyenEntreArret\":tempsMoyenEntreArret, \n    \"timeSinceLastStop\":timeSinceLastStop,\n    \"tempsAvantLeProchainArret\": tempsAvantLeProchainArret,\n};\n\n\nreturn [newMsg, newMsg2,newMsg3];\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 840,
        "wires": [
            [
                "fdd2bc04.6af26",
                "63619ef8.0a6488"
            ],
            [
                "513b667e.9fc298",
                "cd0626fa.8be178"
            ],
            [
                "24a2f5f.94c240a"
            ]
        ]
    },
    {
        "id": "fdd2bc04.6af26",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 720,
        "wires": []
    },
    {
        "id": "63619ef8.0a6488",
        "type": "mongodb out",
        "z": "8b9071f7.6ad848",
        "mongodb": "26e813b1.5ac7d4",
        "name": "",
        "collection": "lignes",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1720,
        "y": 760,
        "wires": []
    },
    {
        "id": "24a2f5f.94c240a",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 920,
        "wires": []
    },
    {
        "id": "634ed721.d343c8",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 780,
        "wires": []
    },
    {
        "id": "cd0626fa.8be178",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 820,
        "wires": []
    },
    {
        "id": "1d63d776.44b6f1",
        "type": "debug",
        "z": "8b9071f7.6ad848",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 820,
        "wires": []
    }
]